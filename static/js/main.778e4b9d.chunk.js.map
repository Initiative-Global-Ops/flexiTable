{"version":3,"sources":["Table.js","DataGetter.js","App.js","serviceWorker.js","index.js"],"names":["Table","props","onGridReady","params","gridApi","api","gridColumnApi","columnApi","onBtnExport","exportDataAsCsv","handleChange","e","tactic","field","target","value","setState","prevState","columnDefs","state","filter","defaultColDef","cellStyle","backgroundColor","borderRight","resizable","flex","minWidth","sortable","rowSelection","rowData","style","width","height","marginTop","marginLeft","display","flexDirection","className","onChange","disabled","selected","onClick","id","float","this","frameworkComponents","data","rowHeight","pagination","paginationPageSize","suppressRowTransform","Component","require","tableau","window","DataGetter","setData","setColumns","columns","useEffect","extensions","initializeAsync","then","dashboardContent","dashboard","name","worksheets","find","w","getUnderlyingDataAsync","dataTable","dataJson","dataArr","cols","map","d","push","fieldName","i","length","App","useState","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.778e4b9d.chunk.js","sourcesContent":["\"use strict\";\n\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport './styles.css';\nimport { useEffect, useState, useRef } from 'react';\n\n\n    const pagination = true;\n    const paginationPageSize = 100;\n    const rowHeight = 30;\n    const suppressRowTransform = true;\n \nclass Table extends Component {\n    constructor(props) {\n        super(props);\n      \n  // console.log(props)\n\n        this.state = {      \n          columnDefs: [\n            {\n              field: \"Custom Creative Field 2\",\n              filter: false,\n            },\n            {\n              field: \"Creative Dimension\",\n            \n              filter: false,\n          \n            },\n            {\n              field: \"Impressions\",\n            \n              filter: false,  \n            },\n            {\n              field: \"Clicks\",\n           \n              filter: false,  \n            },\n            {\n              field: \"Creative Tactic / Campaign Qualifier\",\n           \n              filter: false,  \n            },\n          ],\n          \n          defaultColDef: {\n            cellStyle: { backgroundColor: '#f5f2ee', \n            borderRight:'0.25 solid black' },\n            resizable: true,\n            flex: 1,\n            minWidth: 100,\n            filter: true,\n            sortable: true,\n          },\n          rowSelection: 'single',\n          rowData: [],\n        };   \n      }\n\n\n       \n\n      \n      onGridReady = (params) => {\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n    \n\n      };\n\n     onBtnExport = () => {\n        this.gridApi.exportDataAsCsv();\n      }\n\n    handleChange = (e) => { \n        let tactic = {field: e.target.value}\n        // console.log(\"tactic\", tactic)\n        // console.log(\"state\", this.state)\n        this.setState(prevState => ({\n            columnDefs: [...prevState.columnDefs, tactic]\n        }))\n    }\n    \n      render() {\n        // console.log(\"cols\",this.state.columnDefs)\n    \n        return (\n          <div style={{ width: \"100vw\", height: \"100vh\" }}>\n             <div\n          style={{ marginTop:'0px', marginLeft:'10px',height: '0%', display: 'flex', flexDirection: 'column' }}\n             >\n        <span className=\"titles\">DIMENSIONS</span>\n          <div className=\"btns-box\"> \n          <select style={{ backgroundColor:'#999999'}} className=\"dropdown\" onChange={(e) => this.handleChange(e)}>\n                <option disabled selected value>KPIs</option>\n                <option value=\"CTR\">CTR</option>\n                <option value=\"VCR\">VCR</option>\n                <option value=\"Conversion Rate\">Conversion Rate</option>\n                <option value=\"Engagement Rate\">Engagement Rate</option>\n            </select>\n            <select style={{ backgroundColor:'#999999'}} className=\"dropdown\" onChange={(e) => this.handleChange(e)}>\n                <option disabled selected value>Volume Metrics</option>\n                <option value=\"Impressions\">Impressions</option>\n                <option value=\"Clicks\">Clicks</option>\n                <option value=\"Rich Media Engagements\">Rich Media Engagements</option>\n                <option value=\"Total Converisons\">Total Converisons</option>\n            </select>\n            \n            <select className=\"dropdown\" onChange={(e) => this.handleChange(e)}>\n                <option disabled selected value>Strategy & Targeting Tactics</option>\n                <option value=\"Contextual Environment\">Contextual Environment</option>\n                <option value=\"Creative Tactic / Campaign Qualifier\">Creative Tactic / Campaign Qualifier</option>\n                <option value=\"Audience\">Audience</option>\n            </select>\n            <select style={{ backgroundColor:'#2F2969'}} className=\"dropdown\" onChange={(e) => this.handleChange(e)}>\n                <option disabled selected value>Product Inputs</option>\n                <option value=\"Product\">Product</option>\n                <option value=\"Product Detail 1\">Product Detail 1</option>\n                <option value=\"Product Detail 2\">Product Detail 2</option>\n            </select>\n            <select style={{ backgroundColor:'#104C89'}} className=\"dropdown\" onChange={(e) => this.handleChange(e)}>\n                <option disabled selected value>Creative Version Qualifiers</option>\n                <option value=\"Creative Version\">Creative Version</option>\n                <option value=\"Custom Version Field 1\">Custom Version Field 1</option>\n                <option value=\"Custom Version Field 2\">Custom Version Field 2</option>\n                <option value=\"Custom Version Field 3\">Custom Version Field 3</option>\n                <option value=\"Creative Dimension\">Creative Dimension</option>\n                <option value=\"Creative Execution\">Creative Execution</option>\n            </select>\n            <select style={{ backgroundColor:'#3057A5'}} className=\"dropdown\" onChange={(e) => this.handleChange(e)}>\n                <option disabled selected value>Real-Time Trigger Targetting</option>\n                <option value=\"Data Provider\">Data Provider</option>\n                <option value=\"Trigger Type \">Trigger Type</option>\n                <option value=\"Trigger Detail \">Trigger Detail</option>\n                <option value=\"Trigger Parameter \">Trigger Parameter</option>\n            </select>\n            <select style={{ backgroundColor:'#0E4652'}} className=\"dropdown\" onChange={(e) => this.handleChange(e)}>\n                <option disabled selected value>Creative Element Insights</option>\n                <option value=\"Custom Creative Field 1\">Custom Creative Field 1</option>\n                <option value=\"Custom Creative Field 2\">Custom Creative Field 2</option>\n                <option value=\"Custom Creative Field 3\">Custom Creative Field 3</option>\n                <option value=\"Custom Creative Field 4\">Custom Creative Field 4</option>\n                <option value=\"Custom Creative Field 5\">Custom Creative Field 5</option>\n                <option value=\"Custom Creative Field 6\">Custom Creative Field 6</option>\n                <option value=\"Custom Creative Field 7\">Custom Creative Field 7</option>\n                <option value=\"Custom Creative Field 8\">Custom Creative Field 8</option>\n                <option value=\"Custom Creative Field 9\">Custom Creative Field 9</option>\n                <option value=\"Custom Creative Field 10\">Custom Creative Field 10</option>\n                <option value=\"Custom Creative Field 11\">Custom Creative Field 11</option>\n                <option value=\"Custom Creative Field 12\">Custom Creative Field 12</option>\n            </select>\n            <span className=\"focus\"></span>\n            <button className=\"export-btn\" onClick={() => this.onBtnExport()}>\n              Download CSV\n            </button>\n            </div>\n            \n           \n         \n        </div>\n\n            <div\n              id=\"myGrid\"\n              style={{\n                marginTop:\"10px\",\n                height: \"90vh\",\n                width: \"78vw\",\n                float: \"right\"\n              }}\n              className=\"ag-theme-alpine\"\n            >\n        <span className=\"titles\">PERFORMANCE BY DIMENSION</span>\n\n              <AgGridReact\n                columnDefs={this.state.columnDefs}\n                defaultColDef={this.state.defaultColDef}\n                frameworkComponents={this.state.frameworkComponents}\n                onGridReady={this.onGridReady}\n                rowData={this.props.data}\n                rowHeight={rowHeight}\n                pagination={pagination} \n                paginationPageSize={paginationPageSize}\n                suppressRowTransform={suppressRowTransform}\n              />\n            </div>\n          </div>\n        );     \n      } \n    }\n\n\n    // function getRowData(data, key) {\n    //     var filtered_data = [];\n    //     for ( let i=0; i< data.length; i++){\n    //         if (data[i].Product == key){\n    //             filtered_data.push(data[i])\n    //         }\n    //     }\n\n    //     return filtered_data\n    //   }\n     \n\n    \n\nexport default Table;\n\n","import React from \"react\";\nimport { useEffect, useState, useRef } from 'react';\nrequire(\"./App.css\");\n\nconst { tableau } = window;\n\nfunction DataGetter(props){\n  const {data, setData, columns, setColumns} = props\n\n  // console.log(\"columns\", columns)\n  // console.log(\"setData\", setData)\n\n  useEffect(() => {\n  // console.log(\"useEffect\", useEffect)\n    tableau.extensions.initializeAsync().then(() => {\n      const dashboardName = tableau.extensions.dashboardContent.dashboard.name;   \n      tableau.extensions.dashboardContent.dashboard.worksheets.find(w => w.name === \"flexiTable\").getUnderlyingDataAsync().then(dataTable => {\n        // console.log('data columns',dataTable.columns)\n        // console.log('all data',dataTable.data)\n    \n        var dataJson;\n        var dataArr = [];\n        var cols = [];\n        dataTable.columns.map(d => {\n          cols.push(d.fieldName);\n       })\n\n       dataTable.data.map(d => {\n          dataJson = {};\n          for (let i = 0; i < cols.length; i++) {   \n            dataJson[cols[i]] = d[i].value\n        \n        }  \n          dataArr.push(dataJson)\n      });\n\n  \n        const {data} = dataArr\n        const {columns} = dataTable\n\n        setData(dataArr)\n        setColumns(columns)\n\n      });\n    });\n    }, [])\n\n  return <div></div>\n}\n\nexport default DataGetter;\n","import {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { useEffect, useState, useRef } from 'react';\nimport Table from './Table';\nimport DataGetter from './DataGetter.js';\n// import DropDowns from './Dropdowns.jsx';\n\nconst App = () => {\n  const [data, setData] = useState(0);\n  const [columns, setColumns] = useState(0);\n\n\n  return (\n    <div className=\"table-container\" style={{ height: 400, width: 600 }}>\n       {/* <DropDowns data={data} columns={columns}/> */}\n       <Table data={data} columns={columns}/>\n       <DataGetter data={data} setData={setData} columns={columns} setColumns={setColumns}/>\n    </div>\n  );\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}